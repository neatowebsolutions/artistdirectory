name: artistdirectory-logs-service
on:
  push:
    branches:
      - test
      - production
    paths:
      - .github/workflows/logs-service.yml
      - services/logs/**
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    steps:
      - name: Set Environment Variables
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Inject "MONGODB_URL_LOGS" SSM Parameter
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "/artistdirectory/${{ env.BRANCH }}/database/mongodb-logs/url"
          env_variable_name: "MONGODB_URL_LOGS"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.17.0
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Install Global Packages
        run: npm install -g yarn serverless
      - name: Run Terraform
        run: ./run.sh
        working-directory: services/logs/infrastructure
        env:
          STAGE: ${{ env.BRANCH }}
          MONGODB_APP_PASSWORD: ${{ secrets.MONGODB_APP_PASSWORD }}
      - name: Install Node Modules
        run: yarn install
      - name: Build Packages
        run: lerna bootstrap --force-local && NODE_ENV=production lerna run build --stream --scope=@artistdirectory/*
      - name: Run Data Migrations
        run: yarn migrate
        working-directory: services/logs
        env:
          MONGODB_URL_LOGS: ${{ env.MONGODB_URL_LOGS }}
      - name: Deploy Serverless Application to us-east-1
        run: serverless deploy --stage $BRANCH --region us-east-1
        working-directory: services/logs
      - name: Deploy Serverless Application to eu-west-1
        run: serverless deploy --stage $BRANCH --region eu-west-1
        working-directory: services/logs
        if: ${{ github.ref == 'refs/heads/production' }}
      - name: Deploy Serverless Application to ap-northeast-1
        run: serverless deploy --stage $BRANCH --region ap-northeast-1
        working-directory: services/logs
        if: ${{ github.ref == 'refs/heads/production' }}
      - name: Uninstall Global Packages
        if: always()
        run: npm uninstall -g yarn serverless
