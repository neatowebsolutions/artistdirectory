service: artistdirectory-logs-service
variablesResolutionMode: 20210326
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 2048
  timeout: 10
  endpointType: REGIONAL
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  versionFunctions: false
  logRetentionInDays: 14
  apiGateway:
    shouldStartNameWithService: true
  environment:
    NODE_ENV: ${env:NODE_ENV, 'production'}
    MONGODB_URL_LOGS: ${env:MONGODB_URL_LOGS, ssm:/artistdirectory/${self:provider.stage}/database/mongodb-logs/url}

custom:
  serverless-offline:
    httpPort: ${env:LOGS_API_PORT, 3003}
    lambdaPort: 5003
  customDomain:
    domainName: ${ssm:/artistdirectory/${self:provider.stage}/logs-api/domain, ''}
    basePath: ''
    certificateName: ${ssm:/artistdirectory/${self:provider.stage}/certificate-name, ''}
    createRoute53Record: true
    endpointType: regional
    securityPolicy: tls_1_2
    autoDomain: true
  warmup:
    default:
      enabled: false
      concurrency: 5
      prewarm: true
      events:
        - schedule: rate(5 minutes)

functions:
  createLog:
    handler: src/routes/createLog.handler
    events:
      - http:
          path: /logs
          method: post
          authorizer: aws_iam
  health:
    memorySize: 128
    handler: src/routes/health.handler
    events:
      - http:
          path: /health
          method: get
          cors: true
    warmup:
      default:
        enabled: false
  log:
    memorySize: 256
    reservedConcurrency: 3
    handler: src/workers/log.handler
    events:
      - sqs:
          arn: ${ssm:/artistdirectory/${self:provider.stage}/queues/log/arn, 'arn:aws:sqs:${self:provider.region}:000000000000:log-queue-dev'}
          batchSize: 10
          maximumBatchingWindow: 10
    warmup:
      default:
        enabled: false
  findLogs:
    handler: src/routes/findLogs.handler
    events:
      - http:
          path: /logs
          method: get
          authorizer: aws_iam

plugins:
  - serverless-offline
  - serverless-plugin-monorepo
  - serverless-domain-manager
  - serverless-plugin-warmup

package:
  patterns:
    - '!infrastructure/**'
